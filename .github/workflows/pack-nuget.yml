################################################################################
#                                                                              #
#   Copyright 2023 Finebits (https://finebits.com)                             #
#                                                                              #
#   Licensed under the Apache License, Version 2.0 (the "License");            #
#   you may not use this file except in compliance with the License.           #
#   You may obtain a copy of the License at                                    #
#                                                                              #
#       http://www.apache.org/licenses/LICENSE-2.0                             #
#                                                                              #
#   Unless required by applicable law or agreed to in writing, software        #
#   distributed under the License is distributed on an "AS IS" BASIS,          #
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
#   See the License for the specific language governing permissions and        #
#   limitations under the License.                                             #
#                                                                              #
################################################################################

name: Pack Nuget

on:
  workflow_dispatch:
    inputs:
      push-nuget:
        description: 'Nuget will be pushed to nuget.org'
        type: boolean
        required: false
        default: false
      ignore-certificate:
        description: 'Nuget can be pushed without a certificate'
        type: boolean
        required: false
        default: false
  release:
    types: [published]

env:
  artifact-name: Finebits.Network.RestClient
  nuget-project: ./source/Network.RestClient/Network.RestClient.csproj
  test-project: ./source/Test/Test.csproj
  configuration: Release

  package-root: "${{ github.workspace }}/nupkgs"
  certificate-root: "${{ github.workspace }}/certificates"

  certificate: ${{ secrets.NUGET_SIGNING_CERT_BASE64 }}
  certificate-password: ${{ secrets.NUGET_SIGNING_CERT_PASSWORD }}
  nuget-apikey: ${{ secrets.NUGET_APIKEY }}

jobs:
  test-nuget:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Install dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Build the project
      run: dotnet build ${{ env.nuget-project }} --configuration ${{ env.configuration }}

    - name: Test the project
      run: dotnet test ${{ env.test-project }} --configuration ${{ env.configuration }}

  pack-nuget:
    runs-on: ubuntu-latest
    needs: [test-nuget]
    outputs:
      artifact-full-name: ${{ steps.nuget.outputs.artifact-full-name }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Install dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Get version number
      id: version
      uses: finebits/github-actions/version-number@v1

    - name: Save nuget parameters
      id: nuget 
      run: |
        echo "file-version=${{ env.file-version }}" >> $GITHUB_OUTPUT
        echo "package-version=${{ env.package-version }}" >> $GITHUB_OUTPUT
        echo "artifact-full-name=${{ env.artifact-name }}-v${{ env.package-version }}" >> $GITHUB_OUTPUT
      env:
        file-version: ${{ steps.version.outputs.suffix-version }}
        package-version: ${{ steps.version.outputs.semantic-hash-version }}

    - name: Build nuget
      run: dotnet build ${{ env.nuget-project }} --configuration ${{ env.configuration }} --property:Version=${{ env.file-version }} --property:ContinuousIntegrationBuild=true
      env:
        file-version: ${{ steps.nuget.outputs.file-version }}

    - name: Pack nuget
      run: dotnet pack "${{ env.nuget-project }}" --output="${{ env.package-root }}" --configuration ${{ env.configuration }} --p:PackageVersion="${{ env.package-version }}" --no-build
      env:
        package-version: ${{ steps.nuget.outputs.package-version }}

    - name: Sign nuget
      if: ${{ env.certificate != '' }}
      run: |
        mkdir -p ${{ env.certificate-root }}
        echo "${{ env.certificate }}" | base64 --decode > "${{ env.certificate-file }}"
        dotnet nuget sign "${{ env.package-root }}/*.nupkg" --certificate-path="${{ env.certificate-file }}" --certificate-password="${{ env.certificate-password }}" --timestamper "http://timestamp.digicert.com"
      env:
        certificate-file: "${{ env.certificate-root }}/certificate.pfx"

    - name: Verify nuget
      if: ${{ env.certificate != '' }}
      run: dotnet nuget verify "${{ env.package-root }}/*.nupkg"

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.artifact-name }}
        path: |
          ${{ env.package-root }}
      env:
        artifact-name: ${{ steps.nuget.outputs.artifact-full-name }}

    - name: Push package to nuget.org
      if: ${{ ( github.event_name == 'release' || inputs.push-nuget ) && env.nuget-apikey != '' && ( env.certificate != '' || inputs.ignore-certificate ) }}
      run: dotnet nuget push "${{ env.package-root }}/*.nupkg" --api-key "${{ env.nuget-apikey }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
